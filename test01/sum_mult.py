# Найти сумму и произведение цифр трехзначного числа, которое вводит пользователь.
from functools import reduce

qwe = 742


def sum_mult(q):
    list_int = [int(p) for p in str(q)]
    res_sum = sum(list_int)
    res_mult = reduce(lambda w, e: w * e, list_int)
    return res_sum, res_mult


res_sum_mult = sum_mult(qwe)
print(res_sum_mult)

# По введенным пользователем координатам двух точек вывести уравнение прямой,
# проходящей через эти точки. ///////Общее уравнение прямой имеет вид y = kx + b.
# Для какой-то конкретной прямой в уравнении коэффициенты k и b заменяются на числа,
# например, y = 4x - 2. Задача сводится именно к нахождению этих коэффициентов.
# //////////////////////////////////////////////////////////////////////////////
# Алгоритм решения данной задаче на языке программирования будет таков:
# Получить значения координат первой точки и присвоить их переменным, например x1 и y1.
# Получить значения координат (x2, y2) второй точки.
# Вычислить значение k по формуле k = (y1 - y2) / (x1 - x2).
# Вычислить значение b по формуле b = y2 - k * x2.
# Вывести на экран полученное уравнение.
# А(3;2), а координаты B(-1;-1)
x = ''
x1 = 3
y1 = 2
x2 = -1
y2 = -1
k = (y1 - y2) / (x1 - x2)
print(k)
b = y2 - k * x2
print(b)
# y = 0.75 * x + 0.25
import math

# Найти длину гипотенузы
# По двум введенным пользователем катетам вычислить длину гипотенузы.
# c = sqrt(a2 + b2),
# c2 = a2 + b2
q = int(input('=======>>  a'))
w = int(input('=======>  b'))


def length_gipp(a, b):
    leng = round(math.sqrt(a ** 2 + b ** 2))

    return leng


res_length_gipp = length_gipp(q, w)
print(res_length_gipp)

